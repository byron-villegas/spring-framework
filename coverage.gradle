def jacocoExclusions = ['cl/springframework/application/*', 'cl/springframework/constants/*', 'cl/springframework/enums/*', 'cl/springframework/configuration/*', 'cl/springframework/model/*', 'cl/springframework/dto/*', 'cl/springframework/filter/*', 'cl/springframework/exception/*']

jacocoTestReport {
    getExecutionData().from(fileTree(dir: "${buildDir}/jacoco", include: "**/*.exec"))

    reports {
        xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclusions)
        }))
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclusions)
        }))
    }
    violationRules {
        rule {
            enabled = true
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
        rule {
            enabled = true
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
    }
}

jacocoTestReport {
    dependsOn test
}