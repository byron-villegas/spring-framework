name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: gradle
    - name: Set up Gradle
      uses: gradle/gradle-build-action@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
  unit-test:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
    - name: Set up Gradle
      uses: gradle/gradle-build-action@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test with Gradle
      run: ./gradlew test
    - uses: actions/upload-artifact@v4
      with:
        name: tests
        path: build/reports/tests/test
    - uses: actions/upload-artifact@v4
      with:
        name: jacocoReport
        path: build/jacocoHtml
  deploy:
    needs: [build, unit-test]
    runs-on: ubuntu-latest
    env:
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
    steps:
      - name: Deploy With Hook
        run: curl -X POST $RENDER_DEPLOY_HOOK > deploy.json
      - uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: deploy.json
      - name: Sleep By Four Minutes
        run: sleep 240
  performance-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install JMeter
      run: |
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.5.tgz
        tar -xzf apache-jmeter-5.5.tgz
        sudo mv apache-jmeter-5.5 /opt/apache-jmeter
        echo "JMETER_HOME=/opt/apache-jmeter" >> $GITHUB_ENV
    - name: Run JMeter Performance Tests
      run: ${{ env.JMETER_HOME }}/bin/jmeter -n -t performance-test/java-springframework.jmx -JvPROTOCOL=https -JvHOST="springframework.onrender.com" -JvPORT=443 -JvCONTEXT=/api -JvVERSION=/ -JvAMBIENTE=dev -JvTHREADS=10 -JvTIMEOUT=8000 -JvRAMP_UP=1 -LDEBUG -l test_results.jtl -e -o /jmeter-result
    - uses: actions/upload-artifact@v4
      with:
        name: jmeter-results
        path: /jmeter-result
  acceptance-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    env:
      AMBIENTE: dev
      CONTEXT_PATH: api
      HOST: https://springframework.onrender.com
      PORT: 443
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test with Gradle
        run: ./gradlew acceptanceTest
      - uses: actions/upload-artifact@v4
        with:
          name: acceptanceTest
          path: build/reports/tests/acceptanceTest
